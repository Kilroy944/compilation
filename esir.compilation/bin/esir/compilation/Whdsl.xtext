grammar esir.compilation.Whdsl with org.eclipse.xtext.common.Terminals

generate whdsl "http://www.compilation.esir/Whdsl"

Program:
	(functions+=Function)*
;

Function:
	'function'name=SYMBOLE':'definition=Definition
;

Definition:
	input=Input'%'
	commands=Commands
	'%'output=Output
;


/*Input Output */
	
Input:
	'read' vars=Vars
;

Output:
	'write' vars=Vars
;


/* COMMANDS */

Commands:
	list+=Command (';' list+=Command)*
;

Command:
	(cmd=Nop) | (cmd=Affect) | (cmd=If) | (cmd=For) | (cmd=While)	
;

If:
	'if' condition=Expr 'then' thenCommands=Commands ('else' elseCommands=Commands)? 'fi'
;

Affect:
	vars=Vars ':=' exprs=Exprs
;

For:
	'for' condition=Expr 'do' commands=Commands 'od'
;

While:
	'while' condition=Expr 'do' commands=Commands 'od'
;

Nop:
	nop='nop'
;

Vars:
	list+=VARIABLE (',' list+=VARIABLE)*
;	


/* EXPRESSIONS */
Exprs:
	list+=Expr (',' list+=Expr)*
;

// expressions séparées par des blancs, ex: (cons nil (cons nil Y))
LExpr:
	list+=Expr (list+=Expr)*
;

Expr:
	simple=ExprSimple
;

ExprSimple:
	nil=NIL | var=VARIABLE | sym=SYMBOLE |
	'(' (
		'cons' cons=LExpr |
		'list' list=LExpr |
		'hd' hd=Expr |
		'tl' tl=Expr |
		funcName=SYMBOLE funcParams=LExpr
	) ')'
;

/* TERMINAUX */
terminal NIL:
	'Nil' | 'nil'
;

/*TERMINAL */	
terminal VARIABLE:
	('A'..'Z')*
;

terminal SYMBOLE:
	('a'..'z')*
;