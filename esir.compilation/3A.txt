Table des symboles : 
nil=0
isZero=[f0, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	(then)
	<cons, vt0, s0, s0>
	<AFFECT, v1, vt0, _>
	(else)
	<AFFECT, v1, s0, _>
, _, v0, _>
<WRITE, v1, _, _>

isNotZero=[f1, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	(then)
	<AFFECT, v1, s0, _>
	(else)
	<cons, vt0, s0, s0>
	<AFFECT, v1, vt0, _>
, _, v0, _>
<WRITE, v1, _, _>

isOne=[f2, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 3
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	<EQUAL 
		(gauche)
		(droite)
		<cons, vt1, s0, s0>
	, vt0, v0, vt1>
	(then)
	<cons, vt2, s0, s0>
	<AFFECT, v1, vt2, _>
	(else)
	<AFFECT, v1, s0, _>
, _, vt0, _>
<WRITE, v1, _, _>

incr=[f3, nbIn : 1, nbOut : 1]
Table des variables : 
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<cons, vt0, s0, v0>
<AFFECT, v0, vt0, _>
<WRITE, v0, _, _>

decr=[f4, nbIn : 1, nbOut : 1]
Table des variables : 
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<TL, vt0, v0, _>
<AFFECT, v0, vt0, _>
<WRITE, v0, _, _>

add=[f5, nbIn : 2, nbOut : 1]
Table des variables : 
S=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, v0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt0
	, _, f3, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

addR=[f6, nbIn : 2, nbOut : 1]
Table des variables : 
S=2
X=0
Y=1
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<IF 
	(cond)
	<CALL 
		(code param)
		(var call)
		v1
		(var return)
		vt0
	, _, f0, _>
	(then)
	<AFFECT, v2, v0, _>
	(else)
	<CALL 
		(code param)
		(var call)
		v1
		(var return)
		vt1
	, _, f4, _>
	<CALL 
		(code param)
		(var call)
		v0
		vt1
		(var return)
		vt2
	, _, f6, _>
	<CALL 
		(code param)
		(var call)
		vt2
		(var return)
		vt3
	, _, f3, _>
	<AFFECT, v2, vt3, _>
, _, vt0, _>
<WRITE, v2, _, _>

subs=[f7, nbIn : 2, nbOut : 1]
Table des variables : 
D=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, v0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt0
	, _, f4, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

mult=[f8, nbIn : 2, nbOut : 1]
Table des variables : 
P=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, s0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		v2
		(var return)
		vt0
	, _, f5, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

pow=[f9, nbIn : 2, nbOut : 1]
Table des variables : 
P=2
X=0
Y=1
Nombre de variables temporaires : 2
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<cons, vt0, s0, s0>
<AFFECT, v2, vt0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		v2
		(var return)
		vt1
	, _, f8, _>
	<AFFECT, v2, vt1, _>
, _, v1, _>
<WRITE, v2, _, _>

div=[f10, nbIn : 2, nbOut : 2]
Table des variables : 
Q=2
R=3
NextR=4
X=0
Y=1
Nombre de variables temporaires : 3
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, s0, _>
<AFFECT, v3, v0, _>
<CALL 
	(code param)
	(var call)
	v3
	v1
	(var return)
	vt0
, _, f7, _>
<AFFECT, v4, vt0, _>
<WHILE 
	(cond)
	<CALL 
		(code param)
		(var call)
		v4
		(var return)
		vt1
	, _, f1, _>
	(do)
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt2
	, _, f3, _>
	<AFFECT, v2, vt2, _>
	<AFFECT, v3, v4, _>
, _, vt1, _>
<WRITE, v2, _, _>
<WRITE, v3, _, _>

gcd=[f11, nbIn : 2, nbOut : 1]
Table des variables : 
Q=2
R=3
X=0
Y=1
GCD=4
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<CALL 
	(code param)
	(var call)
	v0
	v1
	(var return)
	vt0
	vt1
, _, f10, _>
<AFFECT, v2, vt0, _>
<CALL 
	(code param)
	(var call)
	v0
	v1
	(var return)
	vt0
	vt1
, _, f10, _>
<AFFECT, v3, vt1, _>
<IF 
	(cond)
	<CALL 
		(code param)
		(var call)
		v3
		(var return)
		vt2
	, _, f1, _>
	(then)
	<CALL 
		(code param)
		(var call)
		v1
		v3
		(var return)
		vt3
	, _, f11, _>
	<AFFECT, v4, vt3, _>
	(else)
	<AFFECT, v4, v1, _>
, _, vt2, _>
<WRITE, v4, _, _>

fact=[f12, nbIn : 1, nbOut : 1]
Table des variables : 
F=1
X=0
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<cons, vt0, s0, s0>
<AFFECT, v1, vt0, _>
<WHILE 
	(cond)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt1
	, _, f1, _>
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt2
	, _, f4, _>
	<AFFECT, v0, vt2, _>
	<CALL 
		(code param)
		(var call)
		v1
		v0
		(var return)
		vt3
	, _, f8, _>
	<AFFECT, v1, vt3, _>
, _, vt1, _>
<WRITE, v1, _, _>

fib=[f13, nbIn : 1, nbOut : 1]
Table des variables : 
F=1
X=0
Nombre de variables temporaires : 10
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	<OR 
   	(gauche)
		<CALL 
			(code param)
			(var call)
			v0
			(var return)
			vt1
		, _, f0, _>
   	(droite)
		<CALL 
			(code param)
			(var call)
			v0
			(var return)
			vt2
		, _, f2, _>
   , vt0, vt1, vt2>
	(then)
	<cons, vt3, s0, s0>
	<AFFECT, v1, vt3, _>
	(else)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt4
	, _, f4, _>
	<CALL 
		(code param)
		(var call)
		vt4
		(var return)
		vt5
	, _, f13, _>
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt6
	, _, f4, _>
	<CALL 
		(code param)
		(var call)
		vt6
		(var return)
		vt7
	, _, f4, _>
	<CALL 
		(code param)
		(var call)
		vt7
		(var return)
		vt8
	, _, f13, _>
	<CALL 
		(code param)
		(var call)
		vt5
		vt8
		(var return)
		vt9
	, _, f5, _>
	<AFFECT, v1, vt9, _>
, _, vt0, _>
<WRITE, v1, _, _>

