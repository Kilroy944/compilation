Table des symboles : 
nil=0
isNotZero=[f0, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	(then)
	<cons, vt0, s0, s0>
	<AFFECT, v1, vt0, _>
	(else)
	<AFFECT, v1, s0, _>
, _, v0, _>
<WRITE, v1, _, _>

isZero=[f1, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	(then)
	<AFFECT, v1, s0, _>
	(else)
	<cons, vt0, s0, s0>
	<AFFECT, v1, vt0, _>
, _, v0, _>
<WRITE, v1, _, _>

incr=[f2, nbIn : 1, nbOut : 1]
Table des variables : 
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<cons, vt0, s0, v0>
<AFFECT, v0, vt0, _>
<WRITE, v0, _, _>

decr=[f3, nbIn : 1, nbOut : 1]
Table des variables : 
X=0
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<TL, vt0, v0, _>
<AFFECT, v0, vt0, _>
<WRITE, v0, _, _>

addR=[f4, nbIn : 2, nbOut : 1]
Table des variables : 
S=2
X=0
Y=1
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<IF 
	(cond)
	<CALL 
		(code param)
		(var call)
		v1
		(var return)
		vt0
	, _, f1, _>
	(then)
	<AFFECT, v2, v0, _>
	(else)
	<CALL 
		(code param)
		(var call)
		v1
		(var return)
		vt1
	, _, f3, _>
	<CALL 
		(code param)
		(var call)
		v0
		vt1
		(var return)
		vt2
	, _, f4, _>
	<CALL 
		(code param)
		(var call)
		vt2
		(var return)
		vt3
	, _, f2, _>
	<AFFECT, v2, vt3, _>
, _, vt0, _>
<WRITE, v2, _, _>

mult=[f5, nbIn : 2, nbOut : 1]
Table des variables : 
P=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, s0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		v2
		(var return)
		vt0
	, _, f14, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

isOne=[f6, nbIn : 1, nbOut : 1]
Table des variables : 
B=1
X=0
Nombre de variables temporaires : 3
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	<EQUAL 
		(gauche)
		(droite)
		<cons, vt1, s0, s0>
	, vt0, v0, vt1>
	(then)
	<cons, vt2, s0, s0>
	<AFFECT, v1, vt2, _>
	(else)
	<AFFECT, v1, s0, _>
, _, vt0, _>
<WRITE, v1, _, _>

subs=[f7, nbIn : 2, nbOut : 1]
Table des variables : 
D=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, v0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt0
	, _, f3, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

pow=[f8, nbIn : 2, nbOut : 1]
Table des variables : 
P=2
X=0
Y=1
Nombre de variables temporaires : 2
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<cons, vt0, s0, s0>
<AFFECT, v2, vt0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		v2
		(var return)
		vt1
	, _, f5, _>
	<AFFECT, v2, vt1, _>
, _, v1, _>
<WRITE, v2, _, _>

greater=[f9, nbIn : 2, nbOut : 1]
Table des variables : 
R=2
X=0
Y=1
Nombre de variables temporaires : 10
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<IF 
	(cond)
	<EQUAL 
		(gauche)
		(droite)
	, vt0, v0, v1>
	(then)
	<AFFECT, v2, s0, _>
	(else)
	<WHILE 
		(cond)
		<AND 
			(gauche)
			<NOT 
				<EQUAL 
					(gauche)
					(droite)
				, vt3, v0, s0>
         , vt2, vt3, _>
			(droite)
			<NOT 
				<EQUAL 
					(gauche)
					(droite)
				, vt5, v1, s0>
         , vt4, vt5, _>
		, vt1, vt2, vt4>
		(do)
		<TL, vt6, v0, _>
		<AFFECT, v0, vt6, _>
		<TL, vt7, v1, _>
		<AFFECT, v1, vt7, _>
	, _, vt1, _>
	<IF 
		(cond)
		<EQUAL 
			(gauche)
			(droite)
		, vt8, v0, s0>
		(then)
		<AFFECT, v2, s0, _>
		(else)
		<cons, vt9, s0, s0>
		<AFFECT, v2, vt9, _>
	, _, vt8, _>
, _, vt0, _>
<WRITE, v2, _, _>

div=[f10, nbIn : 2, nbOut : 2]
Table des variables : 
Q=2
R=3
X=0
Y=1
Nombre de variables temporaires : 5
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, s0, _>
<AFFECT, v3, v0, _>
<WHILE 
	(cond)
	<OR 
   	(gauche)
		<CALL 
			(code param)
			(var call)
			v3
			v1
			(var return)
			vt1
		, _, f9, _>
   	(droite)
		<EQUAL 
			(gauche)
			(droite)
		, vt2, v3, v1>
   , vt0, vt1, vt2>
	(do)
	<CALL 
		(code param)
		(var call)
		v3
		v1
		(var return)
		vt3
	, _, f7, _>
	<AFFECT, v3, vt3, _>
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt4
	, _, f2, _>
	<AFFECT, v2, vt4, _>
, _, vt0, _>
<WRITE, v2, _, _>
<WRITE, v3, _, _>

fact=[f11, nbIn : 1, nbOut : 1]
Table des variables : 
F=1
X=0
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<cons, vt0, s0, s0>
<AFFECT, v1, vt0, _>
<WHILE 
	(cond)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt1
	, _, f0, _>
	(do)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt2
	, _, f3, _>
	<CALL 
		(code param)
		(var call)
		v1
		v0
		(var return)
		vt3
	, _, f5, _>
	<AFFECT, v0, vt2, _>
	<AFFECT, v1, vt3, _>
, _, vt1, _>
<WRITE, v1, _, _>

gcd=[f12, nbIn : 2, nbOut : 1]
Table des variables : 
Q=2
R=3
X=0
Y=1
GCD=4
Nombre de variables temporaires : 4
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<CALL 
	(code param)
	(var call)
	v0
	v1
	(var return)
	vt0
	vt1
, _, f10, _>
<AFFECT, v2, vt0, _>
<AFFECT, v3, vt1, _>
<IF 
	(cond)
	<CALL 
		(code param)
		(var call)
		v3
		(var return)
		vt2
	, _, f0, _>
	(then)
	<CALL 
		(code param)
		(var call)
		v1
		v3
		(var return)
		vt3
	, _, f12, _>
	<AFFECT, v4, vt3, _>
	(else)
	<AFFECT, v4, v1, _>
, _, vt2, _>
<WRITE, v4, _, _>

fib=[f13, nbIn : 1, nbOut : 1]
Table des variables : 
F=1
X=0
Nombre de variables temporaires : 9
Liste de codes 3@ : 
<READ, v0, _, _>
<IF 
	(cond)
	<CALL 
		(code param)
		(var call)
		v0
		(var return)
		vt0
	, _, f1, _>
	(then)
	<AFFECT, v1, s0, _>
	(else)
	<IF 
		(cond)
		<CALL 
			(code param)
			(var call)
			v0
			(var return)
			vt1
		, _, f6, _>
		(then)
		<cons, vt2, s0, s0>
		<AFFECT, v1, vt2, _>
		(else)
		<CALL 
			(code param)
			(var call)
			v0
			(var return)
			vt3
		, _, f3, _>
		<CALL 
			(code param)
			(var call)
			vt3
			(var return)
			vt4
		, _, f13, _>
		<CALL 
			(code param)
			(var call)
			v0
			(var return)
			vt5
		, _, f3, _>
		<CALL 
			(code param)
			(var call)
			vt5
			(var return)
			vt6
		, _, f3, _>
		<CALL 
			(code param)
			(var call)
			vt6
			(var return)
			vt7
		, _, f13, _>
		<CALL 
			(code param)
			(var call)
			vt4
			vt7
			(var return)
			vt8
		, _, f14, _>
		<AFFECT, v1, vt8, _>
	, _, vt1, _>
, _, vt0, _>
<WRITE, v1, _, _>

add=[f14, nbIn : 2, nbOut : 1]
Table des variables : 
S=2
X=0
Y=1
Nombre de variables temporaires : 1
Liste de codes 3@ : 
<READ, v0, _, _>
<READ, v1, _, _>
<AFFECT, v2, v0, _>
<FOR 
	(cond)
	(do)
	<CALL 
		(code param)
		(var call)
		v2
		(var return)
		vt0
	, _, f2, _>
	<AFFECT, v2, vt0, _>
, _, v1, _>
<WRITE, v2, _, _>

