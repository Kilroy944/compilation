/*
 * generated by Xtext 2.13.0
 */
grammar InternalWhdsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package esir.compilation.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package esir.compilation.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import esir.compilation.services.WhdslGrammarAccess;

}
@parser::members {
	private WhdslGrammarAccess grammarAccess;

	public void setGrammarAccess(WhdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleWh
entryRuleWh
:
{ before(grammarAccess.getWhRule()); }
	 ruleWh
{ after(grammarAccess.getWhRule()); } 
	 EOF 
;

// Rule Wh
ruleWh 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhAccess().getElementsAssignment()); }
		(rule__Wh__ElementsAssignment)
		{ after(grammarAccess.getWhAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
			(rule__Program__FunctionsAssignment)
			{ after(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
		)
		(
			{ before(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
			(rule__Program__FunctionsAssignment)*
			{ after(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment()); }
		(rule__Command__CmdAssignment)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNop
entryRuleNop
:
{ before(grammarAccess.getNopRule()); }
	 ruleNop
{ after(grammarAccess.getNopRule()); } 
	 EOF 
;

// Rule Nop
ruleNop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNopAccess().getNopAssignment()); }
		(rule__Nop__NopAssignment)
		{ after(grammarAccess.getNopAccess().getNopAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffect
entryRuleAffect
:
{ before(grammarAccess.getAffectRule()); }
	 ruleAffect
{ after(grammarAccess.getAffectRule()); } 
	 EOF 
;

// Rule Affect
ruleAffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectAccess().getGroup()); }
		(rule__Affect__Group__0)
		{ after(grammarAccess.getAffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeach
entryRuleForeach
:
{ before(grammarAccess.getForeachRule()); }
	 ruleForeach
{ after(grammarAccess.getForeachRule()); } 
	 EOF 
;

// Rule Foreach
ruleForeach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeachAccess().getGroup()); }
		(rule__Foreach__Group__0)
		{ after(grammarAccess.getForeachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getAlternatives()); }
		(rule__Expr__Alternatives)
		{ after(grammarAccess.getExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimple
entryRuleExprSimple
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
		(rule__ExprSimple__Alternatives)
		{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprAnd
entryRuleExprAnd
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAndAccess().getGroup()); }
		(rule__ExprAnd__Group__0)
		{ after(grammarAccess.getExprAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprOr
entryRuleExprOr
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprOrAccess().getGroup()); }
		(rule__ExprOr__Group__0)
		{ after(grammarAccess.getExprOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprCons
entryRuleExprCons
:
{ before(grammarAccess.getExprConsRule()); }
	 ruleExprCons
{ after(grammarAccess.getExprConsRule()); } 
	 EOF 
;

// Rule ExprCons
ruleExprCons 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprConsAccess().getGroup()); }
		(rule__ExprCons__Group__0)
		{ after(grammarAccess.getExprConsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprList
entryRuleExprList
:
{ before(grammarAccess.getExprListRule()); }
	 ruleExprList
{ after(grammarAccess.getExprListRule()); } 
	 EOF 
;

// Rule ExprList
ruleExprList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprListAccess().getGroup()); }
		(rule__ExprList__Group__0)
		{ after(grammarAccess.getExprListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprHd
entryRuleExprHd
:
{ before(grammarAccess.getExprHdRule()); }
	 ruleExprHd
{ after(grammarAccess.getExprHdRule()); } 
	 EOF 
;

// Rule ExprHd
ruleExprHd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprHdAccess().getGroup()); }
		(rule__ExprHd__Group__0)
		{ after(grammarAccess.getExprHdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprTl
entryRuleExprTl
:
{ before(grammarAccess.getExprTlRule()); }
	 ruleExprTl
{ after(grammarAccess.getExprTlRule()); } 
	 EOF 
;

// Rule ExprTl
ruleExprTl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprTlAccess().getGroup()); }
		(rule__ExprTl__Group__0)
		{ after(grammarAccess.getExprTlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSym
entryRuleExprSym
:
{ before(grammarAccess.getExprSymRule()); }
	 ruleExprSym
{ after(grammarAccess.getExprSymRule()); } 
	 EOF 
;

// Rule ExprSym
ruleExprSym 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSymAccess().getGroup()); }
		(rule__ExprSym__Group__0)
		{ after(grammarAccess.getExprSymAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprNot
entryRuleExprNot
:
{ before(grammarAccess.getExprNotRule()); }
	 ruleExprNot
{ after(grammarAccess.getExprNotRule()); } 
	 EOF 
;

// Rule ExprNot
ruleExprNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprNotAccess().getGroup()); }
		(rule__ExprNot__Group__0)
		{ after(grammarAccess.getExprNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprEq
entryRuleExprEq
:
{ before(grammarAccess.getExprEqRule()); }
	 ruleExprEq
{ after(grammarAccess.getExprEqRule()); } 
	 EOF 
;

// Rule ExprEq
ruleExprEq 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprEqAccess().getGroup()); }
		(rule__ExprEq__Group__0)
		{ after(grammarAccess.getExprEqAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdNopParserRuleCall_0_0()); }
		ruleNop
		{ after(grammarAccess.getCommandAccess().getCmdNopParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAffectParserRuleCall_0_1()); }
		ruleAffect
		{ after(grammarAccess.getCommandAccess().getCmdAffectParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdIfParserRuleCall_0_2()); }
		ruleIf
		{ after(grammarAccess.getCommandAccess().getCmdIfParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdForParserRuleCall_0_3()); }
		ruleFor
		{ after(grammarAccess.getCommandAccess().getCmdForParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdWhileParserRuleCall_0_4()); }
		ruleWhile
		{ after(grammarAccess.getCommandAccess().getCmdWhileParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdForeachParserRuleCall_0_5()); }
		ruleForeach
		{ after(grammarAccess.getCommandAccess().getCmdForeachParserRuleCall_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_0()); }
		(rule__Expr__ExprAssignment_0)
		{ after(grammarAccess.getExprAccess().getExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_1()); }
		(rule__Expr__ExprAssignment_1)
		{ after(grammarAccess.getExprAccess().getExprAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_2()); }
		(rule__Expr__ExprAssignment_2)
		{ after(grammarAccess.getExprAccess().getExprAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_3()); }
		(rule__Expr__ExprAssignment_3)
		{ after(grammarAccess.getExprAccess().getExprAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_4()); }
		(rule__Expr__ExprAssignment_4)
		{ after(grammarAccess.getExprAccess().getExprAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_5()); }
		(rule__Expr__ExprAssignment_5)
		{ after(grammarAccess.getExprAccess().getExprAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_6()); }
		(rule__Expr__ExprAssignment_6)
		{ after(grammarAccess.getExprAccess().getExprAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_7()); }
		(rule__Expr__ExprAssignment_7)
		{ after(grammarAccess.getExprAccess().getExprAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprAssignment_8()); }
		(rule__Expr__ExprAssignment_8)
		{ after(grammarAccess.getExprAccess().getExprAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprEqAssignment_9()); }
		(rule__Expr__ExprEqAssignment_9)
		{ after(grammarAccess.getExprAccess().getExprEqAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getGroup_10()); }
		(rule__Expr__Group_10__0)
		{ after(grammarAccess.getExprAccess().getGroup_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getStrAssignment_0()); }
		(rule__ExprSimple__StrAssignment_0)
		{ after(grammarAccess.getExprSimpleAccess().getStrAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getVarSimpleAssignment_1()); }
		(rule__ExprSimple__VarSimpleAssignment_1)
		{ after(grammarAccess.getExprSimpleAccess().getVarSimpleAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getSymAssignment_2()); }
		(rule__ExprSimple__SymAssignment_2)
		{ after(grammarAccess.getExprSimpleAccess().getSymAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3()); }
		(rule__ExprSimple__Group_3__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
	(rule__Function__DefinitionAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getInputAssignment_1()); }
	(rule__Definition__InputAssignment_1)
	{ after(grammarAccess.getDefinitionAccess().getInputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getCommandsAssignment_3()); }
	(rule__Definition__CommandsAssignment_3)
	{ after(grammarAccess.getDefinitionAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
	rule__Definition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }
	'write'
	{ after(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getOutputAssignment_6()); }
	(rule__Definition__OutputAssignment_6)
	{ after(grammarAccess.getDefinitionAccess().getOutputAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVarsAssignment_0()); }
	(rule__Input__VarsAssignment_0)
	{ after(grammarAccess.getInputAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getGroup_1()); }
	(rule__Input__Group_1__0)*
	{ after(grammarAccess.getInputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__0__Impl
	rule__Input__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getInputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVarsAssignment_1_1()); }
	(rule__Input__VarsAssignment_1_1)
	{ after(grammarAccess.getInputAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVarsAssignment_0()); }
	(rule__Output__VarsAssignment_0)
	{ after(grammarAccess.getOutputAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_1()); }
	(rule__Output__Group_1__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__0__Impl
	rule__Output__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVarsAssignment_1_1()); }
	(rule__Output__VarsAssignment_1_1)
	{ after(grammarAccess.getOutputAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
	(rule__Commands__CommandsAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
	(rule__Commands__CommandsAssignment_1_1)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getExprAssignment_1()); }
	(rule__If__ExprAssignment_1)
	{ after(grammarAccess.getIfAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCommands1Assignment_3()); }
	(rule__If__Commands1Assignment_3)
	{ after(grammarAccess.getIfAccess().getCommands1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_4()); }
	(rule__If__Group_4__0)?
	{ after(grammarAccess.getIfAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getFiKeyword_5()); }
	'fi'
	{ after(grammarAccess.getIfAccess().getFiKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__0__Impl
	rule__If__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCommands2Assignment_4_1()); }
	(rule__If__Commands2Assignment_4_1)
	{ after(grammarAccess.getIfAccess().getCommands2Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__0__Impl
	rule__Affect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getVarsAssignment_0()); }
	(rule__Affect__VarsAssignment_0)
	{ after(grammarAccess.getAffectAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__1__Impl
	rule__Affect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getGroup_1()); }
	(rule__Affect__Group_1__0)*
	{ after(grammarAccess.getAffectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__2__Impl
	rule__Affect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getAffectAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__3__Impl
	rule__Affect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getExprsAssignment_3()); }
	(rule__Affect__ExprsAssignment_3)
	{ after(grammarAccess.getAffectAccess().getExprsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getGroup_4()); }
	(rule__Affect__Group_4__0)*
	{ after(grammarAccess.getAffectAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affect__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group_1__0__Impl
	rule__Affect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAffectAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getVarsAssignment_1_1()); }
	(rule__Affect__VarsAssignment_1_1)
	{ after(grammarAccess.getAffectAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affect__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group_4__0__Impl
	rule__Affect__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAffectAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getExprsAssignment_4_1()); }
	(rule__Affect__ExprsAssignment_4_1)
	{ after(grammarAccess.getAffectAccess().getExprsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getExprAssignment_1()); }
	(rule__For__ExprAssignment_1)
	{ after(grammarAccess.getForAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getForAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getCmdsAssignment_3()); }
	(rule__For__CmdsAssignment_3)
	{ after(grammarAccess.getForAccess().getCmdsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getForAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__0__Impl
	rule__Foreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__1__Impl
	rule__Foreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getExprAssignment_1()); }
	(rule__Foreach__ExprAssignment_1)
	{ after(grammarAccess.getForeachAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__2__Impl
	rule__Foreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForeachAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__3__Impl
	rule__Foreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getExpr2Assignment_3()); }
	(rule__Foreach__Expr2Assignment_3)
	{ after(grammarAccess.getForeachAccess().getExpr2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__4__Impl
	rule__Foreach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForeachAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__5__Impl
	rule__Foreach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getCmdsAssignment_5()); }
	(rule__Foreach__CmdsAssignment_5)
	{ after(grammarAccess.getForeachAccess().getCmdsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getForeachAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getExprAssignment_1()); }
	(rule__While__ExprAssignment_1)
	{ after(grammarAccess.getWhileAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getCmdsAssignment_3()); }
	(rule__While__CmdsAssignment_3)
	{ after(grammarAccess.getWhileAccess().getCmdsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getWhileAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_10__0__Impl
	rule__Expr__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getLeftParenthesisKeyword_10_0()); }
	'('
	{ after(grammarAccess.getExprAccess().getLeftParenthesisKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_10__1__Impl
	rule__Expr__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getExprAssignment_10_1()); }
	(rule__Expr__ExprAssignment_10_1)
	{ after(grammarAccess.getExprAccess().getExprAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getRightParenthesisKeyword_10_2()); }
	')'
	{ after(grammarAccess.getExprAccess().getRightParenthesisKeyword_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__0__Impl
	rule__ExprSimple__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__1__Impl
	rule__ExprSimple__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getNameFunctionAssignment_3_1()); }
	(rule__ExprSimple__NameFunctionAssignment_3_1)
	{ after(grammarAccess.getExprSimpleAccess().getNameFunctionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__2__Impl
	rule__ExprSimple__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getVarsAssignment_3_2()); }
	(rule__ExprSimple__VarsAssignment_3_2)
	{ after(grammarAccess.getExprSimpleAccess().getVarsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getArg1Assignment_0()); }
	(rule__ExprAnd__Arg1Assignment_0)
	{ after(grammarAccess.getExprAndAccess().getArg1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__1__Impl
	rule__ExprAnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getAndKeyword_1()); }
	'and'
	{ after(grammarAccess.getExprAndAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getArg2Assignment_2()); }
	(rule__ExprAnd__Arg2Assignment_2)
	{ after(grammarAccess.getExprAndAccess().getArg2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getArg1Assignment_0()); }
	(rule__ExprOr__Arg1Assignment_0)
	{ after(grammarAccess.getExprOrAccess().getArg1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__1__Impl
	rule__ExprOr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getExprOrAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getArg2Assignment_2()); }
	(rule__ExprOr__Arg2Assignment_2)
	{ after(grammarAccess.getExprOrAccess().getArg2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprCons__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCons__Group__0__Impl
	rule__ExprCons__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprConsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprConsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCons__Group__1__Impl
	rule__ExprCons__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprConsAccess().getConsKeyword_1()); }
	'cons'
	{ after(grammarAccess.getExprConsAccess().getConsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCons__Group__2__Impl
	rule__ExprCons__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprConsAccess().getArg1Assignment_2()); }
	(rule__ExprCons__Arg1Assignment_2)
	{ after(grammarAccess.getExprConsAccess().getArg1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCons__Group__3__Impl
	rule__ExprCons__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprConsAccess().getArg2Assignment_3()); }
	(rule__ExprCons__Arg2Assignment_3)
	{ after(grammarAccess.getExprConsAccess().getArg2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCons__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprConsAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExprConsAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprList__Group__0__Impl
	rule__ExprList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprListAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprListAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprList__Group__1__Impl
	rule__ExprList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprListAccess().getListKeyword_1()); }
	'list'
	{ after(grammarAccess.getExprListAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprList__Group__2__Impl
	rule__ExprList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprListAccess().getArgAssignment_2()); }
	(rule__ExprList__ArgAssignment_2)
	{ after(grammarAccess.getExprListAccess().getArgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExprListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprHd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprHd__Group__0__Impl
	rule__ExprHd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprHdAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprHdAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprHd__Group__1__Impl
	rule__ExprHd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprHdAccess().getHdKeyword_1()); }
	'hd'
	{ after(grammarAccess.getExprHdAccess().getHdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprHd__Group__2__Impl
	rule__ExprHd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprHdAccess().getArgAssignment_2()); }
	(rule__ExprHd__ArgAssignment_2)
	{ after(grammarAccess.getExprHdAccess().getArgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprHd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprHdAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExprHdAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprTl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprTl__Group__0__Impl
	rule__ExprTl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprTlAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprTlAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprTl__Group__1__Impl
	rule__ExprTl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprTlAccess().getTlKeyword_1()); }
	'tl'
	{ after(grammarAccess.getExprTlAccess().getTlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprTl__Group__2__Impl
	rule__ExprTl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprTlAccess().getArgAssignment_2()); }
	(rule__ExprTl__ArgAssignment_2)
	{ after(grammarAccess.getExprTlAccess().getArgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprTl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprTlAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExprTlAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSym__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSym__Group__0__Impl
	rule__ExprSym__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSymAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExprSymAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSym__Group__1__Impl
	rule__ExprSym__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSymAccess().getArg1Assignment_1()); }
	(rule__ExprSym__Arg1Assignment_1)
	{ after(grammarAccess.getExprSymAccess().getArg1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSym__Group__2__Impl
	rule__ExprSym__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSymAccess().getArg2Assignment_2()); }
	(rule__ExprSym__Arg2Assignment_2)
	{ after(grammarAccess.getExprSymAccess().getArg2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSym__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSymAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getExprSymAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group__0__Impl
	rule__ExprNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getExprNotAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getArg1Assignment_1()); }
	(rule__ExprNot__Arg1Assignment_1)
	{ after(grammarAccess.getExprNotAccess().getArg1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group__0__Impl
	rule__ExprEq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getArg1Assignment_0()); }
	(rule__ExprEq__Arg1Assignment_0)
	{ after(grammarAccess.getExprEqAccess().getArg1Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group__1__Impl
	rule__ExprEq__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1()); }
	'=?'
	{ after(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getArg2Assignment_2()); }
	(rule__ExprEq__Arg2Assignment_2)
	{ after(grammarAccess.getExprEqAccess().getArg2Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wh__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhAccess().getElementsProgramParserRuleCall_0()); }
		ruleProgram
		{ after(grammarAccess.getWhAccess().getElementsProgramParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__FunctionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameSYMBOLETerminalRuleCall_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getFunctionAccess().getNameSYMBOLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__InputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0()); }
		ruleInput
		{ after(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__OutputAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0()); }
		ruleOutput
		{ after(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getInputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getOutputAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdAlternatives_0()); }
		(rule__Command__CmdAlternatives_0)
		{ after(grammarAccess.getCommandAccess().getCmdAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Commands1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCommands1CommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getCommands1CommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Commands2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCommands2CommandsParserRuleCall_4_1_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getCommands2CommandsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nop__NopAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		(
			{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
			'nop'
			{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		)
		{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getAffectAccess().getVarsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getAffectAccess().getVarsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__ExprsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getExprsExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getAffectAccess().getExprsExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__ExprsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getExprsExprParserRuleCall_4_1_0()); }
		ruleExpr
		{ after(grammarAccess.getAffectAccess().getExprsExprParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__CmdsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getCmdsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getForAccess().getCmdsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Expr2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getExpr2ExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachAccess().getExpr2ExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__CmdsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getCmdsCommandsParserRuleCall_5_0()); }
		ruleCommands
		{ after(grammarAccess.getForeachAccess().getCmdsCommandsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getWhileAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__CmdsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getCmdsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileAccess().getCmdsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprAndParserRuleCall_0_0()); }
		ruleExprAnd
		{ after(grammarAccess.getExprAccess().getExprExprAndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprOrParserRuleCall_1_0()); }
		ruleExprOr
		{ after(grammarAccess.getExprAccess().getExprExprOrParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprSimpleParserRuleCall_2_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprAccess().getExprExprSimpleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprConsParserRuleCall_3_0()); }
		ruleExprCons
		{ after(grammarAccess.getExprAccess().getExprExprConsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprListParserRuleCall_4_0()); }
		ruleExprList
		{ after(grammarAccess.getExprAccess().getExprExprListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprHdParserRuleCall_5_0()); }
		ruleExprHd
		{ after(grammarAccess.getExprAccess().getExprExprHdParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprTlParserRuleCall_6_0()); }
		ruleExprTl
		{ after(grammarAccess.getExprAccess().getExprExprTlParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprSymParserRuleCall_7_0()); }
		ruleExprSym
		{ after(grammarAccess.getExprAccess().getExprExprSymParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprNotParserRuleCall_8_0()); }
		ruleExprNot
		{ after(grammarAccess.getExprAccess().getExprExprNotParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprEqAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprEqExprEqParserRuleCall_9_0()); }
		ruleExprEq
		{ after(grammarAccess.getExprAccess().getExprEqExprEqParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprExprParserRuleCall_10_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprAccess().getExprExprParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__StrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getStrNILTerminalRuleCall_0_0()); }
		RULE_NIL
		{ after(grammarAccess.getExprSimpleAccess().getStrNILTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__VarSimpleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getVarSimpleVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprSimpleAccess().getVarSimpleVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__SymAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getSymSYMBOLETerminalRuleCall_2_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getExprSimpleAccess().getSymSYMBOLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__NameFunctionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getNameFunctionSYMBOLETerminalRuleCall_3_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getExprSimpleAccess().getNameFunctionSYMBOLETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__VarsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getVarsInputParserRuleCall_3_2_0()); }
		ruleInput
		{ after(grammarAccess.getExprSimpleAccess().getVarsInputParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Arg1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAndAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprAndAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Arg2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAndAccess().getArg2ExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprAndAccess().getArg2ExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Arg1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprOrAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprOrAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Arg2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprOrAccess().getArg2ExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprOrAccess().getArg2ExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Arg1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprConsAccess().getArg1ExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprConsAccess().getArg1ExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCons__Arg2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprConsAccess().getArg2ExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getExprConsAccess().getArg2ExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprList__ArgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprListAccess().getArgExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprListAccess().getArgExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprHd__ArgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprHdAccess().getArgExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprHdAccess().getArgExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprTl__ArgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprTlAccess().getArgExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprTlAccess().getArgExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Arg1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSymAccess().getArg1SYMBOLETerminalRuleCall_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getExprSymAccess().getArg1SYMBOLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSym__Arg2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSymAccess().getArg2ExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSymAccess().getArg2ExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Arg1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprNotAccess().getArg1ExprEqParserRuleCall_1_0()); }
		ruleExprEq
		{ after(grammarAccess.getExprNotAccess().getArg1ExprEqParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Arg1Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprEqAccess().getArg1ExprSimpleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Arg2Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getArg2ExprSimpleParserRuleCall_2_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprEqAccess().getArg2ExprSimpleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NIL : ('Nil'|'nil');

RULE_VARIABLE : 'A'..'Z' RULE_ID?;

RULE_SYMBOLE : 'a'..'z' RULE_ID?;

fragment RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
