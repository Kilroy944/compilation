/*
 * generated by Xtext 2.13.0
 */
grammar InternalWhdsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package esir.compilation.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package esir.compilation.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import esir.compilation.services.WhdslGrammarAccess;

}
@parser::members {
	private WhdslGrammarAccess grammarAccess;

	public void setGrammarAccess(WhdslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
		(rule__Program__FunctionsAssignment)*
		{ after(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVars
entryRuleVars
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarsAccess().getGroup()); }
		(rule__Vars__Group__0)
		{ after(grammarAccess.getVarsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffect
entryRuleAffect
:
{ before(grammarAccess.getAffectRule()); }
	 ruleAffect
{ after(grammarAccess.getAffectRule()); } 
	 EOF 
;

// Rule Affect
ruleAffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectAccess().getGroup()); }
		(rule__Affect__Group__0)
		{ after(grammarAccess.getAffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNop
entryRuleNop
:
{ before(grammarAccess.getNopRule()); }
	 ruleNop
{ after(grammarAccess.getNopRule()); } 
	 EOF 
;

// Rule Nop
ruleNop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNopAccess().getNopAssignment()); }
		(rule__Nop__NopAssignment)
		{ after(grammarAccess.getNopAccess().getNopAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForEach
entryRuleForEach
:
{ before(grammarAccess.getForEachRule()); }
	 ruleForEach
{ after(grammarAccess.getForEachRule()); } 
	 EOF 
;

// Rule ForEach
ruleForEach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForEachAccess().getGroup()); }
		(rule__ForEach__Group__0)
		{ after(grammarAccess.getForEachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprs
entryRuleExprs
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprsAccess().getGroup()); }
		(rule__Exprs__Group__0)
		{ after(grammarAccess.getExprsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLExpr
entryRuleLExpr
:
{ before(grammarAccess.getLExprRule()); }
	 ruleLExpr
{ after(grammarAccess.getLExprRule()); } 
	 EOF 
;

// Rule LExpr
ruleLExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLExprAccess().getGroup()); }
		(rule__LExpr__Group__0)
		{ after(grammarAccess.getLExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getExprAndParserRuleCall()); }
		ruleExprAnd
		{ after(grammarAccess.getExprAccess().getExprAndParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprAnd
entryRuleExprAnd
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAndAccess().getGroup()); }
		(rule__ExprAnd__Group__0)
		{ after(grammarAccess.getExprAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprOr
entryRuleExprOr
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprOrAccess().getGroup()); }
		(rule__ExprOr__Group__0)
		{ after(grammarAccess.getExprOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprNot
entryRuleExprNot
:
{ before(grammarAccess.getExprNotRule()); }
	 ruleExprNot
{ after(grammarAccess.getExprNotRule()); } 
	 EOF 
;

// Rule ExprNot
ruleExprNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprNotAccess().getAlternatives()); }
		(rule__ExprNot__Alternatives)
		{ after(grammarAccess.getExprNotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprEq
entryRuleExprEq
:
{ before(grammarAccess.getExprEqRule()); }
	 ruleExprEq
{ after(grammarAccess.getExprEqRule()); } 
	 EOF 
;

// Rule ExprEq
ruleExprEq 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprEqAccess().getGroup()); }
		(rule__ExprEq__Group__0)
		{ after(grammarAccess.getExprEqAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimple
entryRuleExprSimple
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
		(rule__ExprSimple__Alternatives)
		{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_0()); }
		(rule__Command__CmdAssignment_0)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_1()); }
		(rule__Command__CmdAssignment_1)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_2()); }
		(rule__Command__CmdAssignment_2)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_3()); }
		(rule__Command__CmdAssignment_3)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_4()); }
		(rule__Command__CmdAssignment_4)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCmdAssignment_5()); }
		(rule__Command__CmdAssignment_5)
		{ after(grammarAccess.getCommandAccess().getCmdAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprNotAccess().getGroup_0()); }
		(rule__ExprNot__Group_0__0)
		{ after(grammarAccess.getExprNotAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprNotAccess().getExprEqParserRuleCall_1()); }
		ruleExprEq
		{ after(grammarAccess.getExprNotAccess().getExprEqParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_0()); }
		(rule__ExprSimple__Group_0__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_1()); }
		(rule__ExprSimple__Group_1__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_2()); }
		(rule__ExprSimple__Group_2__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3()); }
		(rule__ExprSimple__Group_3__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_0()); }
		(rule__ExprSimple__Group_3_1_0__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_1()); }
		(rule__ExprSimple__Group_3_1_1__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_2()); }
		(rule__ExprSimple__Group_3_1_2__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_3()); }
		(rule__ExprSimple__Group_3_1_3__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_4()); }
		(rule__ExprSimple__Group_3_1_4__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3_1_5()); }
		(rule__ExprSimple__Group_3_1_5__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
	(rule__Function__DefinitionAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getInputAssignment_0()); }
	(rule__Definition__InputAssignment_0)
	{ after(grammarAccess.getDefinitionAccess().getInputAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_1()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getCommandsAssignment_2()); }
	(rule__Definition__CommandsAssignment_2)
	{ after(grammarAccess.getDefinitionAccess().getCommandsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getOutputAssignment_4()); }
	(rule__Definition__OutputAssignment_4)
	{ after(grammarAccess.getDefinitionAccess().getOutputAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getInputAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getVarsAssignment_1()); }
	(rule__Input__VarsAssignment_1)
	{ after(grammarAccess.getInputAccess().getVarsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getWriteKeyword_0()); }
	'write'
	{ after(grammarAccess.getOutputAccess().getWriteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getVarsAssignment_1()); }
	(rule__Output__VarsAssignment_1)
	{ after(grammarAccess.getOutputAccess().getVarsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getListAssignment_0()); }
	(rule__Vars__ListAssignment_0)
	{ after(grammarAccess.getVarsAccess().getListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getGroup_1()); }
	(rule__Vars__Group_1__0)*
	{ after(grammarAccess.getVarsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__0__Impl
	rule__Vars__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVarsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vars__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarsAccess().getListAssignment_1_1()); }
	(rule__Vars__ListAssignment_1_1)
	{ after(grammarAccess.getVarsAccess().getListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getListAssignment_0()); }
	(rule__Commands__ListAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getListAssignment_1_1()); }
	(rule__Commands__ListAssignment_1_1)
	{ after(grammarAccess.getCommandsAccess().getListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getConditionAssignment_1()); }
	(rule__If__ConditionAssignment_1)
	{ after(grammarAccess.getIfAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getThenCommandsAssignment_3()); }
	(rule__If__ThenCommandsAssignment_3)
	{ after(grammarAccess.getIfAccess().getThenCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_4()); }
	(rule__If__Group_4__0)?
	{ after(grammarAccess.getIfAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getFiKeyword_5()); }
	'fi'
	{ after(grammarAccess.getIfAccess().getFiKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__0__Impl
	rule__If__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseCommandsAssignment_4_1()); }
	(rule__If__ElseCommandsAssignment_4_1)
	{ after(grammarAccess.getIfAccess().getElseCommandsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__0__Impl
	rule__Affect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getVarsAssignment_0()); }
	(rule__Affect__VarsAssignment_0)
	{ after(grammarAccess.getAffectAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__1__Impl
	rule__Affect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getAffectAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectAccess().getExprsAssignment_2()); }
	(rule__Affect__ExprsAssignment_2)
	{ after(grammarAccess.getAffectAccess().getExprsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getConditionAssignment_1()); }
	(rule__For__ConditionAssignment_1)
	{ after(grammarAccess.getForAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getForAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getCommandsAssignment_3()); }
	(rule__For__CommandsAssignment_3)
	{ after(grammarAccess.getForAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getForAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getConditionAssignment_1()); }
	(rule__While__ConditionAssignment_1)
	{ after(grammarAccess.getWhileAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getCommandsAssignment_3()); }
	(rule__While__CommandsAssignment_3)
	{ after(grammarAccess.getWhileAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getWhileAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__0__Impl
	rule__ForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForEachAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__1__Impl
	rule__ForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getElemAssignment_1()); }
	(rule__ForEach__ElemAssignment_1)
	{ after(grammarAccess.getForEachAccess().getElemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__2__Impl
	rule__ForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForEachAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__3__Impl
	rule__ForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getEnsembAssignment_3()); }
	(rule__ForEach__EnsembAssignment_3)
	{ after(grammarAccess.getForEachAccess().getEnsembAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__4__Impl
	rule__ForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForEachAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__5__Impl
	rule__ForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getCommandsAssignment_5()); }
	(rule__ForEach__CommandsAssignment_5)
	{ after(grammarAccess.getForEachAccess().getCommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getForEachAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getListAssignment_0()); }
	(rule__Exprs__ListAssignment_0)
	{ after(grammarAccess.getExprsAccess().getListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getGroup_1()); }
	(rule__Exprs__Group_1__0)*
	{ after(grammarAccess.getExprsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__0__Impl
	rule__Exprs__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExprsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprs__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprsAccess().getListAssignment_1_1()); }
	(rule__Exprs__ListAssignment_1_1)
	{ after(grammarAccess.getExprsAccess().getListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group__0__Impl
	rule__LExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getListAssignment_0()); }
	(rule__LExpr__ListAssignment_0)
	{ after(grammarAccess.getLExprAccess().getListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLExprAccess().getListAssignment_1()); }
	(rule__LExpr__ListAssignment_1)*
	{ after(grammarAccess.getLExprAccess().getListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getExprOrParserRuleCall_0()); }
	ruleExprOr
	{ after(grammarAccess.getExprAndAccess().getExprOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getGroup_1()); }
	(rule__ExprAnd__Group_1__0)*
	{ after(grammarAccess.getExprAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__0__Impl
	rule__ExprAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__1__Impl
	rule__ExprAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getExprAndAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
	(rule__ExprAnd__RightAssignment_1_2)
	{ after(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getExprNotParserRuleCall_0()); }
	ruleExprNot
	{ after(grammarAccess.getExprOrAccess().getExprNotParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getGroup_1()); }
	(rule__ExprOr__Group_1__0)*
	{ after(grammarAccess.getExprOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__0__Impl
	rule__ExprOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__1__Impl
	rule__ExprOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getExprOrAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
	(rule__ExprOr__RightAssignment_1_2)
	{ after(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group_0__0__Impl
	rule__ExprNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getExprNotAction_0_0()); }
	()
	{ after(grammarAccess.getExprNotAccess().getExprNotAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group_0__1__Impl
	rule__ExprNot__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getNotKeyword_0_1()); }
	'not'
	{ after(grammarAccess.getExprNotAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprNot__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprNotAccess().getExprAssignment_0_2()); }
	(rule__ExprNot__ExprAssignment_0_2)
	{ after(grammarAccess.getExprNotAccess().getExprAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group__0__Impl
	rule__ExprEq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getExprSimpleParserRuleCall_0()); }
	ruleExprSimple
	{ after(grammarAccess.getExprEqAccess().getExprSimpleParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getGroup_1()); }
	(rule__ExprEq__Group_1__0)?
	{ after(grammarAccess.getExprEqAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__0__Impl
	rule__ExprEq__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getExprEqLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExprEqAccess().getExprEqLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__1__Impl
	rule__ExprEq__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1_1()); }
	'=?'
	{ after(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprEq__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprEqAccess().getRightAssignment_1_2()); }
	(rule__ExprEq__RightAssignment_1_2)
	{ after(grammarAccess.getExprEqAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_0__0__Impl
	rule__ExprSimple__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getNillAction_0_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getNillAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getValueAssignment_0_1()); }
	(rule__ExprSimple__ValueAssignment_0_1)
	{ after(grammarAccess.getExprSimpleAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_1__0__Impl
	rule__ExprSimple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getVariableAction_1_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getVariableAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getValueAssignment_1_1()); }
	(rule__ExprSimple__ValueAssignment_1_1)
	{ after(grammarAccess.getExprSimpleAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_2__0__Impl
	rule__ExprSimple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getSymbolAction_2_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getSymbolAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getValueAssignment_2_1()); }
	(rule__ExprSimple__ValueAssignment_2_1)
	{ after(grammarAccess.getExprSimpleAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__0__Impl
	rule__ExprSimple__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__1__Impl
	rule__ExprSimple__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getAlternatives_3_1()); }
	(rule__ExprSimple__Alternatives_3_1)
	{ after(grammarAccess.getExprSimpleAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_0__0__Impl
	rule__ExprSimple__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getConsAction_3_1_0_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getConsAction_3_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_0__1__Impl
	rule__ExprSimple__Group_3_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getConsKeyword_3_1_0_1()); }
	'cons'
	{ after(grammarAccess.getExprSimpleAccess().getConsKeyword_3_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprsAssignment_3_1_0_2()); }
	(rule__ExprSimple__ExprsAssignment_3_1_0_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprsAssignment_3_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_1__0__Impl
	rule__ExprSimple__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getListAction_3_1_1_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getListAction_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_1__1__Impl
	rule__ExprSimple__Group_3_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getListKeyword_3_1_1_1()); }
	'list'
	{ after(grammarAccess.getExprSimpleAccess().getListKeyword_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprsAssignment_3_1_1_2()); }
	(rule__ExprSimple__ExprsAssignment_3_1_1_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprsAssignment_3_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_2__0__Impl
	rule__ExprSimple__Group_3_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getHdAction_3_1_2_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getHdAction_3_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_2__1__Impl
	rule__ExprSimple__Group_3_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getHdKeyword_3_1_2_1()); }
	'hd'
	{ after(grammarAccess.getExprSimpleAccess().getHdKeyword_3_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_2_2()); }
	(rule__ExprSimple__ExprAssignment_3_1_2_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_3__0__Impl
	rule__ExprSimple__Group_3_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getTlAction_3_1_3_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getTlAction_3_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_3__1__Impl
	rule__ExprSimple__Group_3_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getTlKeyword_3_1_3_1()); }
	'tl'
	{ after(grammarAccess.getExprSimpleAccess().getTlKeyword_3_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_3_2()); }
	(rule__ExprSimple__ExprAssignment_3_1_3_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_4__0__Impl
	rule__ExprSimple__Group_3_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getCallAction_3_1_4_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getCallAction_3_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_4__1__Impl
	rule__ExprSimple__Group_3_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getNameAssignment_3_1_4_1()); }
	(rule__ExprSimple__NameAssignment_3_1_4_1)
	{ after(grammarAccess.getExprSimpleAccess().getNameAssignment_3_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getParamsAssignment_3_1_4_2()); }
	(rule__ExprSimple__ParamsAssignment_3_1_4_2)
	{ after(grammarAccess.getExprSimpleAccess().getParamsAssignment_3_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_5__0__Impl
	rule__ExprSimple__Group_3_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getEnclosedExprAction_3_1_5_0()); }
	()
	{ after(grammarAccess.getExprSimpleAccess().getEnclosedExprAction_3_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_5_1()); }
	(rule__ExprSimple__ExprAssignment_3_1_5_1)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_3_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__FunctionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameSYMBOLETerminalRuleCall_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getFunctionAccess().getNameSYMBOLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__InputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_0_0()); }
		ruleInput
		{ after(grammarAccess.getDefinitionAccess().getInputInputParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__CommandsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_2_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__OutputAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_4_0()); }
		ruleOutput
		{ after(grammarAccess.getDefinitionAccess().getOutputOutputParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getVarsVarsParserRuleCall_1_0()); }
		ruleVars
		{ after(grammarAccess.getInputAccess().getVarsVarsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getVarsVarsParserRuleCall_1_0()); }
		ruleVars
		{ after(grammarAccess.getOutputAccess().getVarsVarsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__ListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getListVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getListVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__ListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarsAccess().getListVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getVarsAccess().getListVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__ListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getListCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getListCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__ListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getListCommandParserRuleCall_1_1_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getListCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdNopParserRuleCall_0_0()); }
		ruleNop
		{ after(grammarAccess.getCommandAccess().getCmdNopParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdAffectParserRuleCall_1_0()); }
		ruleAffect
		{ after(grammarAccess.getCommandAccess().getCmdAffectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdIfParserRuleCall_2_0()); }
		ruleIf
		{ after(grammarAccess.getCommandAccess().getCmdIfParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdForParserRuleCall_3_0()); }
		ruleFor
		{ after(grammarAccess.getCommandAccess().getCmdForParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdWhileParserRuleCall_4_0()); }
		ruleWhile
		{ after(grammarAccess.getCommandAccess().getCmdWhileParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCmdForEachParserRuleCall_5_0()); }
		ruleForEach
		{ after(grammarAccess.getCommandAccess().getCmdForEachParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getConditionExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getConditionExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ThenCommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getThenCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getThenCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ElseCommandsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getElseCommandsCommandsParserRuleCall_4_1_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getElseCommandsCommandsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getVarsVarsParserRuleCall_0_0()); }
		ruleVars
		{ after(grammarAccess.getAffectAccess().getVarsVarsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affect__ExprsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectAccess().getExprsExprsParserRuleCall_2_0()); }
		ruleExprs
		{ after(grammarAccess.getAffectAccess().getExprsExprsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getConditionExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForAccess().getConditionExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getForAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getConditionExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getWhileAccess().getConditionExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nop__NopAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		(
			{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
			'nop'
			{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		)
		{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__ElemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getElemExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForEachAccess().getElemExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__EnsembAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getEnsembExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getForEachAccess().getEnsembExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__CommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getCommandsCommandsParserRuleCall_5_0()); }
		ruleCommands
		{ after(grammarAccess.getForEachAccess().getCommandsCommandsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getListExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getListExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprsAccess().getListExprParserRuleCall_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprsAccess().getListExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__ListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLExprAccess().getListExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getLExprAccess().getListExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpr__ListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLExprAccess().getListExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getLExprAccess().getListExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAndAccess().getRightExprOrParserRuleCall_1_2_0()); }
		ruleExprOr
		{ after(grammarAccess.getExprAndAccess().getRightExprOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprOrAccess().getRightExprNotParserRuleCall_1_2_0()); }
		ruleExprNot
		{ after(grammarAccess.getExprOrAccess().getRightExprNotParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__ExprAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprNotAccess().getExprExprEqParserRuleCall_0_2_0()); }
		ruleExprEq
		{ after(grammarAccess.getExprNotAccess().getExprExprEqParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprEqAccess().getRightExprSimpleParserRuleCall_1_2_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprEqAccess().getRightExprSimpleParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValueNILTerminalRuleCall_0_1_0()); }
		RULE_NIL
		{ after(grammarAccess.getExprSimpleAccess().getValueNILTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValueVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprSimpleAccess().getValueVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValueSYMBOLETerminalRuleCall_2_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getExprSimpleAccess().getValueSYMBOLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprsAssignment_3_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprsLExprParserRuleCall_3_1_0_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprsLExprParserRuleCall_3_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprsAssignment_3_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprsLExprParserRuleCall_3_1_1_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprsLExprParserRuleCall_3_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_3_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_2_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_3_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_3_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__NameAssignment_3_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getNameSYMBOLETerminalRuleCall_3_1_4_1_0()); }
		RULE_SYMBOLE
		{ after(grammarAccess.getExprSimpleAccess().getNameSYMBOLETerminalRuleCall_3_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ParamsAssignment_3_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getParamsLExprParserRuleCall_3_1_4_2_0()); }
		ruleLExpr
		{ after(grammarAccess.getExprSimpleAccess().getParamsLExprParserRuleCall_3_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_3_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_5_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_3_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NIL : ('Nil'|'nil');

RULE_VARIABLE : ('A'..'Z')+;

RULE_SYMBOLE : ('a'..'z')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
